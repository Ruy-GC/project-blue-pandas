name: Deploy

on:
  workflow_run:
    workflows: 
      - Run Tests
    branches: 
      - main
    types: 
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: "Deploy to VPS"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER}}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          SSH_IP: ${{ secrets.SSH_IP}}

      - name: Deploy site
        id: deploy
        run: ssh my-vps '~/redeploy-site.sh'
      
      - name: Print Container Status
        if: steps.deploy.outcome == 'success'
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT}} && pwd | docker compose ps'
      
  on-failure:
    name: "Tests failed"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering test workflow failed'

  discord:
    name: "Send notification"
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Deployment Failed
        if: needs.deploy.result == 'failure'
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ MLH Portfolio Deployment Failed"

      - name: Deployment Successfull
        if: needs.deploy.result == 'success'
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ MLH Portfolio Deployment Successful"
